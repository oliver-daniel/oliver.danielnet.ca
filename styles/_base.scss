// @use "./reset";
@use "sass:color";
@use "./variables" as *;
//libraries
@use './spectre';
// fonts
@import url("https://fonts.cdnfonts.com/css/potra");
@import url("https://fonts.cdnfonts.com/css/salma-alfa-sans");
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");



@mixin neon($color) {
  color: $color;
  text-shadow: 0 0 12px color.change($color, $alpha: 0.6),
    0 3px 4px color.change($white, $alpha: 0.25);
}

@mixin neon-drop($color) {
  filter: drop-shadow(0 0 0.5rem color.change($color, $alpha: 0.6));
}

.row {
  display: flex;
  flex-direction: row;
}

.centered {
  margin-left: auto;
  margin-right: auto;
}

:root {
  a,
  a:visited {
    color: unset;
  }
  font-variant-ligatures: none;
}

html {
  background-color: $black-800;

  @media (prefers-reduced-motion: no-preference) {
    scroll-behavior: smooth;
  }
}

@mixin rainbow-border {
  $stripes: (0deg transparent);

  @for $i from 1 through length($palette-dark) {
    $color: nth($palette-dark, $i);

    $stripes: append($stripes, $color #{9 * $i}px, comma);
    $stripes: append($stripes, $color #{9 * $i}px, comma);
    $stripes: append($stripes, transparent #{9 * $i + 2}px, comma);
    $stripes: append($stripes, transparent #{9 * $i + 4}px, comma);
  }

  /**
  TLDR: it looks like how the pattern needs to work is:
  (color start-distance, color end-distance, transparent start-distance, transparent end distance...)
  */
  // adding this line makes it impossible to angle, not sure why
  //   $stripes: append($stripes, transparent 6px, comma);

  & {
    background: linear-gradient($stripes, transparent);
  }
}
.socials {
  justify-content: space-evenly;
  font-size: 32px;
}
footer {
  position: relative;
  &::before {
    content: "";
    @include rainbow-border;
    position: absolute;
    top: -50px;
    height: 50px;
    width: 100%;
  }
  min-height: 250px;
  margin-top: 50px;

  > .container {
    margin: 0 auto;
  }
}

#skip-to-content {
  position: fixed;
  z-index: 999;
  top: 0;
  left: 0;
  width: inherit;
  box-sizing: border-box;

  transform: translateY(-100%);

  &:focus {
    transform: translateY(0);
  }
}
